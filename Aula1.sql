-- 11/09/2025
select * from alunos where COD_CIDADE = 2 or COD_CIDADE =6;

-- CONHECENDO A TABELA DE ÁREA

SELECT * FROM AREA

-- CONHECENDO TABELA DE PAISES

SELECT * FROM PAIS

-- CONHECENDO TABELA DE ESTADOS

SELECT * FROM ESTADOS

-- CONHECENDO A TABELA DE ALUNOS 

SELECT * FROM ALUNOS

-- MOSTRANDO ALUNOS A PARTIR DE 30 ANOS DE IDADE

SELECT * FROM ALUNOS WHERE IDADE >= 30

-- MOSTRE TODOS OS ALUNOS DO SEXO MASCULINO

SELECT * FROM ALUNOS WHERE SEXO = 'M' AND IDADE = 22

-- MOSTRE TODOS OS ALUNOS DO SEXO MASCULINO COM 30 ANOS OU MAIS

SELECT * FROM ALUNOS WHERE SEXO = 'M' AND IDADE >= 30

SELECT * FROM ALUNOS WHERE SEXO = 'M' OR IDADE >= 30

-- MOSTRE TODAS AS CIDADES DE MINAS GERAIS

SELECT * FROM CIDADES WHERE UF = 'MG'

-- MOSTRE AS INFORMAÇÕES DE TODOS ALUNOS MAS TRAGA SOMENTE AS SEGUINTES COLUNAS: 
--NOME, IDADE E CPF

SELECT  CPF, NOME, IDADE FROM ALUNOS ORDER BY NOME DESC

-- ORDER BY é ordenar por e DESC e trazer a lista forma decrescente

-- MOSTRE TODOS OS CURSOS E TODAS SUAS COLUNAS MAS ORDENANDO POR NOME DO CURSO

SELECT * FROM CURSOS ORDER BY NOME

--15/09/2025
-- mostre uma consulta que exiba todos os estados que não são do brasil

SELECT * FROM ESTADOS where COD_PAIS = 2;

--MOSTRE TODAS AS CIDADES QUE NÃO SÃO DO ESTADO DE SP

SELECT * FROM CIDADES WHERE UF != 'SP'

--MOSTRE TODAS AS CIDADES EXCETO AS CIDADES DE 'SP' E 'RJ

SELECT * FROM CIDADES WHERE UF != 'SP' AND UF != 'RJ'

-- A MESMA CONSULTA ACIMA PORÉM USANDO OPERADOR BOOLEANO IN E NOT IN

SELECT * FROM CIDADES WHERE UF NOT IN ('SP', 'RJ', 'SC')
--NOT IN É QUE NÃO ESTA CONTIDO UM VALOR NA TABELA

-- MOSTRE UM RELATÓRIO ANALÍTICO COM AS SEGUINTES INFORMAÇÕES:
--CPF, NOME DO ALUNO, IDADE E CIDADE
-- EXEMPLO: 123123123123 |  JOAO SILVA | 40 | SÃO JOSE DO RIO PRETO

--USO DE IDENTAÇÃO --> SERVE PARA ORGANIZAR O CÓDIGO E DEIXÁ-LO MAIS LEGÍVEL

SELECT ALUNOS.CPF, ALUNOS.NOME, ALUNOS.IDADE, CIDADES.NOME
FROM ALUNOS 
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE

-- NOMEANDO (ATRIBUINDO APELIDOS) PARA AS COLUNAS

SELECT ALUNOS.CPF, ALUNOS.NOME AS ALUNO, ALUNOS.IDADE, CIDADES.NOME AS CIDADE
FROM ALUNOS 
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
ORDER BY CIDADE, ALUNO

-- AS --  SERVE PARA RENOMEAR O NOME DO CAMPO NA TABELA

-- EXTRAIA DO BANCO DE DADOS AS SEGUINTES INFORMAÇÕES;
--NOME DO CURSO, NOME DA ÁREA DO CURSO E DURAÇÃO EM HORAS
--EX: JAVA | CIENCIAS EXATAS | 90

SELECT CURSOS.NOME AS 'Curso', AREA.NOME AS 'Area', CURSOS.HORAS AS 'DURACAO'
FROM CURSOS
INNER JOIN AREA ON AREA.COD_AREA = CURSOS.COD_AREA
ORDER BY Area, Curso

-- MOSTRE AS INFORMAÇÕES SOBRE ESTADOS
-- TRAGA AS SEGUINTES COLUNAS:
--NOME DO ESTADO,SIGLA DO ESTADO E NOME DO PAÍS
--EX: SÃO PAULO | SP | Brasil
--California | CA EUA

SELECT ESTADOS.NOME AS 'ESTADO', ESTADOS.UF, PAIS.NOME AS 'País'
FROM ESTADOS
INNER JOIN PAIS ON PAIS.COD_PAIS = ESTADOS.COD_PAIS
ORDER BY País, ESTADO

-- CRIE UM RELATÓRIO QUE MOSTRE TODOS OS ALUNOS MATRICULADOS
-- COLUNAS QUE SERÃO TRAZIDAS:
-- CPF NOME DO ALUNO, IDADE, CIDADE E CURSO QUE ESTA MATRICULADO

SELECT ALUNOS.CPF, ALUNOS.NOME, ALUNOS.IDADE, CIDADES.NOME, CURSOS.NOME
FROM ALUNOS
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
INNER JOIN MATRICULA ON MATRICULA.CPF = ALUNOS.CPF
INNER JOIN CURSOS ON CURSOS.COD_CURSO = MATRICULA.COD_CURSO

-- AJUSTE A CONSULTA ACIMA PARA QUE TRAGA TODOS OS ALUNOS
-- AQUELES QUE NÃO ESTIVEREM MATRICULADOS, NOME DO CURSO DEVE TRAZER A SEGUINTE
--INFORMAÇÃO: 'NAO MATRICULADO'

SELECT ALUNOS.CPF, ALUNOS.NOME AS ALUNO, ALUNOS.IDADE,
-- FUNÇÃO UPPER() DEIXA TODAS AS LETRAS MAIÚSCULAS
--FUNÇÃO IFF() MONTA ESTRUTURA DE DECISÃO IF 
CIDADES.NOME AS CIDADE, UPPER(IIF(CURSOS.NOME IS NULL, 'NAO MATRICULADO', CURSOS.NOME)) AS CURSO 
FROM ALUNOS
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
LEFT JOIN MATRICULA ON MATRICULA.CPF = ALUNOS.CPF
LEFT JOIN CURSOS ON CURSOS.COD_CURSO = MATRICULA.COD_CURSO
ORDER BY ALUNO

-- MOSTRE UMA CONSULTA QUE TRAGA TODAS OS PAÍSES QUE POSSUEM A LETRA 'C' EM SEUS NOMES
-- EXEMPLO: CANADÁ

SELECT * 
FROM PAIS 
WHERE PAIS.NOME LIKE  '%C%'
ORDER BY PAIS.NOME

-- MOSTRE TODOS OS ALUNOS QUE POSSUEM 'SILVA EM SEU NOME'

SELECT *
FROM ALUNOS
WHERE ALUNOS.NOME LIKE '%SILVA%'

-- 16/09/2025

--USANDO FUNÇÕES DE AGREGAÇÃO

-- CRIE UMA CONSULTA QUE MOSTRE A QUANTIDADE DE ALUNOS POR CURSO

SELECT CURSOS.NOME AS CURSO, COUNT(*) AS QTD_MATRICULAS
FROM CURSOS
INNER JOIN MATRICULA ON MATRICULA.COD_CURSO = CURSOS.COD_CURSO
GROUP BY CURSOS.NOME

-- CRIE UMA CONSULTA QUE MOSTRE A QUANTIDADE TOTAL DE ALUNOS POR CIDADE 
-- NÃO É NECESSÁRIO QUE O ALUNO ESTEJA MATRICULADO

SELECT CIDADES.NOME AS CIDADE, COUNT(*) QTD_ALUNOS	
FROM ALUNOS
INNER JOIN CIDADES ON CIDADES.COD_CIDADE = ALUNOS.COD_CIDADE
GROUP BY CIDADES.NOME
ORDER BY QTD_ALUNOS DESC